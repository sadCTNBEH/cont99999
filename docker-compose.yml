services:
  web:
    build: .
    container_name: fastapi_app
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=${DATABASE_URL}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
    depends_on:
      db:
        condition: service_healthy

  worker:
    build: .
    container_name: celery_worker
    command: celery -A celery_app worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - redis

  redis:
    image: redis:7-alpine
    container_name: redis_server
    ports:
      - "6379:6379"

  db:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1111
      POSTGRES_DB: fastapi_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  django:
    build: .
    container_name: django_app
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=${DATABASE_URL}
    command: >
      sh -c "python django_app/manage.py migrate && python django_app/manage.py runserver 0.0.0.0:8080"
    depends_on:
      db:
        condition: service_healthy
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    restart: unless-stopped
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  grafana_data: